typedef I+ : int i
    i > 0

typedef R+ : float r
    r > 0

typedef Fraction : float f
    f > 0
    f < 1

typedef ClosedFraction : float f
    f >= 0
    f <= 1

define pollack_rule:
    nominal_core_performance : R+ as p
    core_size : I+ as s
    p = s ** .5
    #s = p ** 2

# Ref: http://queue.acm.org/detail.cfm?id=2181798
define normalized_chip_performance_model:
    nominal_core_performance : R+ as P_n
    core_performance : R+ as P
    nominal_gate_delay : R+ as D_n
    gate_delay : R+ as D
    core_performance * gate_delay = nominal_core_performance * nominal_gate_delay

# Sakurai-Newton Gate Delay Model
# Ref 1: http://www.aspdac.com/aspdac2006/archives/pdf/1C-1.pdf
# Ref 2: http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1183354
define gate_delay_model:
    load_capacitance : R+ as C_L
    gate_voltage : R+ as V_dd
    kBoltzmann : R+ as k
    thermal_voltage : R+ as V_t
    velocity_saturation_idx: R+ as a
    a = 1.0
    gate_delay : R+ as t
    t = C_L * V_dd / (k * (V_dd - V_t))    

# Ref 1: https://software.intel.com/en-us/blogs/2009/08/25/why-p-scales-as-cv2f-is-so-obvious-pt-2-2
# Ref 2: http://www.siliconintelligence.com/people/binu/perception/node13.html
define dynamic_power_model:
    capacitance_per_transistor : R+ as C_L
    gate_voltage : R+ as V_dd
    clock_frequency : R+ as F
    activity_factor : ClosedFraction as A
    number_of_transistors : I+ as N
    dynamic_power : R+ as P
    P = .5 * C_L * (V_dd ** 2) * A * F * N
    #P = P + 1

# Ref: Lecture 2: Dynamic and static power in CMOS - Auburn University
# define scaling_model

# Ref: https://en.m.wikipedia.org/wiki/Shockley_diode_equation?wprov=sfla1
define thermal_voltage_model:
    thermal_voltage : R+ as V_t
    kBoltzmann : R+ as k
    kCharge : R+ as q
    temperature : R+ as T
    1.381 * (10 ** -23) = k
    q = 1.602 * (10 ** -19)
    V_t * q = k * T

# Ref: http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1705138
define chip_temperature_model:
    ambient_temperature : R+ as T_a
    total_power : R+ as P_tot
    chip_area : R+ as A
    thermal_resistance : R+ as R_theta
    temperature: R+ as T
    T = T_a + R_theta * P_tot / A

# Ref: http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1705138
define black_equation:
    MTTF : R+
    kMat : R+ as A
    average_current : R+ as J
    activation_energy : R+ as E_a
    temperature : R+ as T
    kBoltzmann : R+ as k
    MTTF = (A / (J ** 2)) * exp(E_a / (k * T))
    # The activation energy for grain-boundary diffusion is equal to 0.7 eV for Alâ€“Cu.
    kCharge : R+ as q
    E_a = 0.7 * q

# Ref: https://en.m.wikipedia.org/wiki/Shockley_diode_equation?wprov=sfla1
# Ref: http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7516023
define leakge_power_model:
    reverse_saturation_current : R+ as I_s
    thermal_voltage : R+ as V_t
    kIdeality : R+ as n
    leakage_current : R+ as I
    supply_voltage : R+ as V_d
    leakage_power : R+ as P
    I = I_s * (exp(V_d / (n * V_t)) - 1)
    P = I * V_d

# Ref 1: http://ecee.colorado.edu/~shangl/papers/liu07mar.pdf
# Ref 2: https://en.m.wikipedia.org/wiki/Shockley_diode_equation?wprov=sfla1
define thermal_leakage_power_model:
    # Subthreshold leakage model.
    leakage_costant : R+ as a
    gate_width : R+ as w
    gate_length : R+ as l
    threshold_voltage : R+ as v_th
    gate_2_source_voltage : R+ as v_gs
    drain_2_source_voltage : R+ as v_ds
    thermal_voltage : R+ as v_t
    emission_coefficient : R+ as n
    temperature : R+ as t
    leakage_curret_subthreshold : R+ as I_sub
    I_sub = a * (w / l) * (v_t ** 2) * exp((v_gs - v_th) / (n * v_t))
    # Gate leakage model.

assume thermal_voltage_model, gate_delay_model, pollack_rule, normalized_chip_performance_model, black_equation
#let thermal_voltage = 0.026
let temperature = 300.0
let average_current = 0.001
let gate_voltage = 3.0
let load_capacitance = 1.0
let nominal_gate_delay = 30.0
let kMat = 0.005
let core_size = 16
explore core_performance

#assume pollack_rule, normalized_chip_performance_model, gate_delay_model, dynamic_power_model, thermal_voltage_model, chip_temperature_model, black_equation, thermal_leakage_power_model

#let gate_width = 8
#let gate_length = 42
#let activation_energy = 0.7
#let emissio_coefficient = 
#let core_size = 16
#explore core_performance
